<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAceptar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>